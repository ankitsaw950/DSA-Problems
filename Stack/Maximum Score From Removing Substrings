/*

Problem Number : 1717
problem Name : Maximum Score From Removing Substrings
Problem Link : https://leetcode.com/problems/maximum-score-from-removing-substrings

*/

class Solution {
public:

    string remove (string &s,string &match){
        stack<char> st;

        for(char &ch : s){
            if(ch == match[1] && !st.empty() && st.top()==match[0]){
                st.pop();
            }else{
                st.push(ch);
            }
        }

        string temp ;
        while(!st.empty()){
            temp.push_back(st.top());
            st.pop();
        }

        reverse(begin(temp),end(temp));

        return temp;    


    }

    int maximumGain(string s, int x, int y) {
        int n = s.length();
        int score = 0;

        string maxStr = (x >= y) ? "ab" : "ba";
        string minStr = (x < y) ? "ab" : "ba";


        // First pass
        string temp_first = remove(s,maxStr);
        int  L = temp_first.length();

        int charRemoved  =  (n-L);
        score += (charRemoved/2) * max(x,y);

        // Second Pass

        string temp_second = remove(temp_first,minStr);
        charRemoved = L - temp_second.length();

        score += (charRemoved/2) * min(x,y);

        return score;
        
    }
};
